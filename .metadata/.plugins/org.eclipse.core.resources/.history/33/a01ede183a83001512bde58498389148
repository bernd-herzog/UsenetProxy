#include <stdio.h>
#include <stdlib.h>

#include "client.h"
#include "util.h"
#include "server.h"

#define REMOTE_ADDRESS "2001:4de0:1::1:1"

struct {
	int socket;
	int remoteSocket;
} client;

void clientSetup();
void clientLoop();
void createRemoteSocket();
void bindRemoteSocket();
void connectRemoteSocket();

void clientMain(int connectionSocket)
{
	clientSetup(connectionSocket);
	clientLoop();
}

void clientSetup(int socket)
{
	client.socket = socket;

	createRemoteSocket();
	bindRemoteSocket();
	connectRemoteSocket();
}

void createRemoteSocket()
{
	if ((client.remoteSocket = socket(AF_INET6, SOCK_STREAM, IPPROTO_TCP)) <= 0)
	{
		perror("socket");
	}
}

void bindRemoteSocket()
{
	struct sockaddr_in6 local_addr6;
	memset( &local_addr6, 0, sizeof(local_addr6));
	//local_addr6.sin6_len 	= sizeof(local_addr6);
	local_addr6.sin6_family = AF_INET6;
	//local_addr6.sin6_port 	= htons(0);

	//int iaddr = inet_addr(argv[1]);

	char buf[80];
	sprintf(buf, "2002:%0.2x%0.2x:%0.2x%0.2x::2537:%d", netaddr[0], netaddr[1], netaddr[2], netaddr[3], (i/cpip)+1+cpoff);

	inet_pton(AF_INET6, buf, local_addr6.sin6_addr.s6_addr);

	if (bind (client.remoteSocket, (struct sockaddr*)&local_addr6, sizeof(local_addr6)) < 0){
		perror("bind");
		return -1;
	}
}

void connectRemoteSocket()
{
	struct sockaddr_in6 news_addr;
	memset( &news_addr, 0, sizeof(news_addr));
	//news_addr.sin6_len 		= sizeof(news_addr);
	news_addr.sin6_family 	= AF_INET6;
//	news_addr.sin6_flowinfo = 0;
	news_addr.sin6_port 	= htons(119);

	inet_pton(AF_INET6, remoteIP, news_addr.sin6_addr.s6_addr);

	if (connect( news_sock, (struct sockaddr*)&news_addr, sizeof(news_addr)) < 0)
	{
		perror("connect");
		return -1;
	}
}

void clientLoop()
{
	int running = 1;
	while (running == 1)
	{
		printf("connection %d\n", client.socket);
		close(client.socket);
		exit(0);
	}
}
